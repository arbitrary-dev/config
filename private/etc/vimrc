set number
set smartindent
set ignorecase smartcase
set nowrap
set et sw=2 ts=2
set hidden
set clipboard=unnamed
set backspace=indent,eol,start
set hls

augroup filetypedetect
  au BufRead,BufNewFile *.hamlet setfiletype haskell
augroup END

set textwidth=80 colorcolumn=80
au FileType scala set tw=110 cc=110

map K r<CR>
map =j :%!python -m json.tool<CR>

" trailing spaces highlighting
au FileType *
  \ if &ft == 'diff' |
    \ match Error /\(+.\{-}\)\@<=\s\+$/ |
  \ else |
    \ match Error /\s\+$/ |
  \ endif

" Find syntax highlight group under cursor
map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

execute pathogen#infect()

syntax on
filetype plugin indent on

" Colors
hi Search ctermfg=yellow ctermbg=yellow
hi Visual ctermfg=white ctermbg=white
hi Todo ctermfg=blue ctermbg=blue
hi FoldColumn cterm=none ctermfg=darkcyan ctermbg=cyan
hi Folded cterm=none ctermfg=darkcyan ctermbg=cyan
hi StatusLine cterm=none ctermfg=white ctermbg=blue
hi StatusLineNC cterm=none ctermfg=darkblue ctermbg=blue
hi VertSplit cterm=none ctermfg=darkblue ctermbg=blue
hi LineNr ctermfg=darkblue
hi ModeMsg cterm=none ctermfg=white ctermbg=blue
hi ErrorMsg ctermfg=white ctermbg=red
hi DiffChange ctermfg=darkred ctermbg=darkred
hi DiffText ctermfg=red ctermbg=red
hi DiffDelete ctermfg=darkgreen ctermbg=darkgreen
hi DiffAdd ctermfg=green ctermbg=darkgreen
