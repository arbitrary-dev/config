git-fix-ownership() {
  # TODO only files under Git
  chown -R $1:$1 /home/$1 /tmp/$1
}

esc=$(printf '\033')

alias _shorten-paths="perl -pE 's/[^ ]+ -> //;s/(?<!\.\.)\/.+\/([^\/]+\/)/\/**\/\1/'"

gst() {
  git status --short | \
    _shorten-paths | \
    sed -Ee "s/^(.)(.)/${esc}[32m\1${esc}[0m${esc}[31m\2${esc}[0m/"
}

gbl() {
  local out=$(git blame HEAD --abbrev=6 -s -L ${@:1})
    local n=$( \
        echo $out | \
        \sed -nEe "s/[^)]*) ( *)[^ ].*/\1/p" | \
        awk '{print length}' | \
        sort -g | \
        head -n1
        )

    echo $out | \
    \sed -Ee "s_^([0-9a-z]+) ( *[0-9]+)\) ( {0,$n})_${esc}[32m\1 ${esc}[34m\2${esc}[0m _" | \
    \less -iSXFR
}

alias ga="git add"
alias gap="git apply -p0"
alias gb="git branch"
alias gcl="git clone"
alias gcls="gcl --depth 1 --single-branch"
alias gco="git checkout"
alias gcp="git cherry-pick"
alias grst="git reset"
alias grvt="git revert"
alias grvtc="grvt --continue"
alias grvta="grvt --abort"
alias gbs="git branch -a --format='%(refname:short) %(color:red)%(authordate:relative)' --list *$MY_NAME*"
alias gbi="git bisect"
alias grm="git rm --cached"
alias gsub="git submodule"

gls() { git ls-tree --full-tree -r HEAD | cut -f2; }
alias glsr="git ls-remote --heads origin | cut -d/  -f3-"

alias git-update-tree="git read-tree -m -u HEAD"

alias gp="git push"
alias gf="git fetch"
alias gpl="git pull"

gfco() {
  local ref=("$1")

  [[ "$ref" =~ '^INT-[0-9]+$' ]] \
  && ref=(`git remote show origin | grep -o "\S*$ref\S*"`)

  if (( ${#ref} > 1 )); then
    echo "Which one exactly?"
    for r in $ref; do echo $r; done
  else
    gf origin $ref \
    && gco origin/$ref
  fi
}

alias gt="git tag"
gtr() { git ls-remote --tags ${1:-origin}; }
gtf() { gf --tags ${1:-origin} ${2:-master}; }

_diff_opts=(
  --irreversible-delete
  --ignore-all-space
  --word-diff=color
  --word-diff-regex='\b[$A-Za-z0-9_]+\b|\S'
)

_recolor_diff() {
  sed -Ee "s/${esc}\[3[12]/\0;7/g" \
       -e "s/deleted file mode [0-9]{6}/${esc}[31;7m\0${esc}[0m/"
}

gs() {
  git show "$@" "${_diff_opts[@]}" \
  | _recolor_diff \
  | less
}
alias gss='git show --stat --format=""'
gsno() { git show --oneline --name-only $1 | _shorten-paths; }

alias gsh="git stash save --include-untracked --keep-index"
alias gsha="git stash apply"
alias gshs="git stash show -p"
alias gshl="git stash list"
alias gshp="git stash pop"
alias gshd="git stash drop"

gdf() {
  git diff "$@" "${_diff_opts[@]}" \
  | _recolor_diff \
  | less
}
gdfno() { gdf --name-only $1 $2 | _shorten-paths; }
gdfno1() { gdf --name-only $1{^,} | _shorten-paths; }
alias gdfc="gdf --cached"

glg() {
  local query="--all"
  [[ $1 =~ "INT-[0-9]*" ]] && query="--grep=$1"

  # 'lg' is a local alias to customize indentation per project
  git lg $query 2>/dev/null

  # Fallback to default
  [[ $? == 1 ]] && git log $query --graph --abbrev-commit --decorate --date=format:'%m-%d-%Y %H:%M' \
--format=format:'%C(cyan)%h%C(reset) %C(red)%ad (%ar)%C(reset)%C(green)%d%C(reset)%n'\
'        %C(reset)%s %C(red)%an%+N' --exclude refs/stash
}
alias gl-all="git log --reflog"

alias gc="git commit"
alias gcf="gc --fixup"
alias gcm="gc -m"

alias gr="git rebase"
alias gri="gr --interactive"
alias gri-na="gr --interactive --no-autosquash"
alias grc="gr --continue"
alias gra="gr --abort"

alias gm="git merge"
alias gmff="gm --ff-only"
alias gma="gm --abort"
alias gmc="gm --continue"
alias gmt="git mergetool"

alias git-ignore="git update-index --assume-unchanged"
alias git-unignore="git update-index --no-assume-unchanged"
alias git-ls-ignored='git ls-files -v `git rev-parse --show-toplevel` | grep ^[a-z]'
